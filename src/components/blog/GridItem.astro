---
// import { Image } from 'astro:assets';

import type { Post } from '~/types';
import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = await findImage(post.image);

function darkenColor(color, amount) {
  let [r, g, b, a] = color.match(/\d+/g).map(Number);
  r = Math.floor(r * amount);
  g = Math.floor(g * amount);
  b = Math.floor(b * amount);
  return `rgba(${r}, ${g}, ${b}, ${a - 0.25})`;
}

const adjustedColor1 = darkenColor(post.accentColor, 0.6);
---

<style>
  .borderGlow {
    background: radial-gradient(
      40.23% 100% at 20% 0%,
      rgb(25 17 41) 0%,
      rgba(10, 1, 24, 1) 100%,
      rgba(10, 1, 24, 1) 100%
    );
    transition: 0.3s ease-in-out;
  }
  .borderGlow::before {
    content: '';
    background: linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(255, 255, 255, 0.95) 10%, rgba(0, 0, 0, 0) 60%);
    width: 100%;
    position: relative;
    display: flex;
    height: 0.75px;
  }

  .bgGradient {
    opacity: 0;
    background: radial-gradient(
      110.23% 95% at 20% 0%,
      var(--gradient-base-color) 0%,
      var(--adjusted-color1) 50%,
      transparent 100%
    );
    transition: 0.3s ease-in-out;
  }
  .arrow-right {
    transition: 0.3s ease-in-out;
  }
  .borderGlow:hover .bgGradient {
    background: radial-gradient(
      110.23% 95% at 20% 0%,
      var(--gradient-base-color) 0%,
      var(--adjusted-color1) 50%,
      transparent 100%
    );
    opacity: 1;
    transition: 0.3s ease-in-out;
  }
  .borderGlow:hover .arrow-right {
    transform: translateX(10px);
    transition: 0.3s ease-in-out;
    color: rgba(255, 255, 255, 0.85);
  }
  .borderGlow video {
    transform: unset;
    box-shadow: 0 40px 50px 10px rgba(0, 0, 0, 0.15);
    transition: 0.5s cubic-bezier(0.14, 1, 0.34, 1);
  }
  .borderGlow:hover video {
    transform: translateY(-25px);
    box-shadow: 0 40px 50px 10px rgba(0, 0, 0, 0.5);
    transition: 0.5s cubic-bezier(0.14, 1, 0.34, 1);
  }
</style>

<article
  class="animate-on-scroll"
  data-type="simple"
  data-delay="0"
  data-duration="2.5"
  data-easing="Expo.easeOut"
  style={{
    '--gradient-base-color': post.accentColor,
    '--adjusted-color1': adjustedColor1,
  }}
>
  <div
    class="cursor-none custom-mouse relative borderGlow mb-6 w-full h-screen rounded-2xl mt-16 border border-[#2d263a] overflow-hidden"
    data-typemouse="link"
  >
    <a href={getPermalink(post.permalink, 'post')} class="w-full cursor-none" data-nav="animate">
      <div class="bgGradient absolute top-0 h-full w-full rounded-2xl border border-[#716882]"></div>
      <div class="flex flex-col h-full justify-between z-10 relative">
        <div class="flex flex-row justify-between px-12 pt-14">
          <div class="h-1/6">
            <h3
              class="text-3xl font-bold tracking-tighter mb-2 headingTxt text-left animate-on-scroll"
              data-type="simple"
              data-delay="0.1"
              data-duration="2.5"
              data-easing="Expo.easeOut"
            >
              {post.title}
            </h3>
            <p
              class="text-neutral-400 text-lg animate-on-scroll"
              data-type="simple"
              data-delay="0.15"
              data-duration="2.5"
              data-easing="Expo.easeOut"
            >
              {post.excerpt || post.description}
            </p>
          </div>
          <div class="flex items-center text-neutral-400">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="arrow-right"
              width="2.5rem"
              height="2.5rem"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentcolor"
              fill="none"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
              <path d="M5 12l14 0"></path>
              <path d="M15 16l4 -4"></path>
              <path d="M15 8l4 4"></path>
            </svg>
          </div>
        </div>
        <div
          class="relative h-5/6 rounded pt-16 animate-on-scroll"
          data-type="simple"
          data-delay="0.35"
          data-duration="2"
          data-easing="Expo.easeOut"
        >
          {
            image && (
              <video class="object-cover w-5/6 h-[105%] rounded-t-2xl mx-auto" src="./Project1.mp4" autoplay muted />
            )
          }
        </div>
      </div>
    </a>
  </div>
</article>
<!-- <Image
src={image}
class="object-cover w-5/6 h-full rounded-t-2xl mx-auto"
widths={[1920]}
alt={post.title}
loading="lazy"
decoding="async"
/> -->
