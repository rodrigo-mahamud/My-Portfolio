---
import { Picture } from '@astrojs/image/components';
import PostTags from '~/components/blog/Tags.astro';
import SocialShare from '~/components/common/SocialShare.astro';
import { getFormattedDate } from '~/utils/utils';

import type { Post } from '~/types';

export interface Props {
  post: Post;
  url: string | URL;
}

const { post, url } = Astro.props;
console.log(post);

function darkenColor(color, amount) {
  let [r, g, b, a] = color.match(/\d+/g).map(Number);
  r = Math.floor(r * amount);
  g = Math.floor(g * amount);
  b = Math.floor(b * amount);
  return `rgba(${r}, ${g}, ${b}, ${a - 0.25})`;
}

const adjustedColor1 = darkenColor(post.accentColor, 0.6);
---

<style>
  .bg-accentColor {
    background: radial-gradient(
      95% 25% at 50% 0%,
      var(--gradient-base-color) 0%,
      var(--adjusted-color1) 50%,
      transparent 100%
    );
    animation: fadeInOut 3s;
  }
  @keyframes fadeInOut {
    0% {
      background: radial-gradient(
        95% 25% at 50% 0%,
        var(--gradient-base-color) 0%,
        var(--adjusted-color1) 50%,
        transparent 0%
      );
    }
    100% {
      background: radial-gradient(
        95% 25% at 50% 0%,
        var(--gradient-base-color) 0%,
        var(--adjusted-color1) 50%,
        transparent 100%
      );
    }
  }
</style>
<section
  class="bg-accentColor"
  style={{
    '--gradient-base-color': post.accentColor,
    '--adjusted-color1': adjustedColor1,
  }}
>
  <article class="opacity-0 blur-lg max-w-6xl mx-auto">
    <header class="w-full h-full pt-36">
      <div class="flex justify-between flex-col sm:flex-row mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center">
        <h1 class="px-4 sm:px-6 mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading">
          {post.title}
        </h1>
        <p>
          <time datetime={String(post.publishDate)}>{getFormattedDate(post.publishDate)}</time>
        </p>
      </div>
      {
        post.image ? (
          <Picture
            src={post.image}
            class="max-w-full w-full mx-auto mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700"
            widths={[400, 900]}
            sizes="(max-width: 1440px) 400px, 900px"
            alt={post.description || ''}
            loading="eager"
            aspectRatio={16 / 9}
            width={900}
            height={506}
            loading="eager"
            decoding="async"
          />
        ) : (
          <div class=" mx-auto px-4 sm:px-6">
            <div class="border-t dark:border-slate-700" />
          </div>
        )
      }
    </header>
    <div
      class="mx-auto px-6 sm:px-6 prose prose-lg lg:prose-xl dark:prose-invert dark:prose-headings:text-slate-300 prose-md prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-lg mt-8"
    >
      {post.Content && <post.Content />}
    </div>
    <div class="mx-auto px-6 sm:px-6 mt-8 flex justify-between flex-col sm:flex-row">
      <PostTags tags={post.tags} class="mr-5" />
      <SocialShare url={url} text={post.title} class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600" />
    </div>
  </article>
</section>
<script>
  import { gsap } from 'gsap';

  const article = document.querySelector('article');

  gsap.to(article, {
    duration: 0.75,
    filter: 'blur(0px)',
    opacity: 1,
    ease: 'power3.out',
  });
</script>
