---
interface InfoProps {
  singlePostInfo: any;
}

const { singlePostInfo } = Astro.props as InfoProps;
---

<div class="mx-auto pt-16">
  <div class="flex flex-col md:flex-row justify-between">
    <div
      class="md:w-1/3 animate-on-scroll mb-8 md:mb-0"
      data-type="simple"
      data-duration="1.5"
      data-easing="Expo.easeOut"
    >
      <div class="mb-8">
        <h2 class="text-lg font-bold mb-1 text-white">My Role</h2>
        <p class="text-base">{singlePostInfo.rol}</p>
      </div>
      <div class="mb-8">
        <h2 class="text-lg font-bold mb-1 text-white">{singlePostInfo.title}</h2>
        <p class="text-base leading-normal"><Fragment set:html={singlePostInfo.team} /></p>
      </div>
    </div>

    <div class="md:w-1/2 animate-on-scroll" data-type="simple" data-duration="1.5" data-easing="Expo.easeOut">
      <div class="mb-8">
        <h2 class="text-lg font-bold mb-1 text-white">Status & Duraci√≥n</h2>
        <p class="text-base">
          <b
            class={`uppercase ${
              singlePostInfo.status.toLowerCase() === 'done'
                ? 'text-green-500'
                : singlePostInfo.status.toLowerCase() === 'in progress'
                ? 'text-yellow-500'
                : ''
            }`}
          >
            {singlePostInfo.status}
          </b> - {singlePostInfo.duration}
        </p>
      </div>
      <div class="md:mb-10">
        <h2 class="text-lg font-bold mb-2 text-white">Overview</h2>
        <p class="text-base text-pretty leading-snug">
          <Fragment set:html={singlePostInfo.overview} />
        </p>
      </div>
    </div>
  </div>
</div>
