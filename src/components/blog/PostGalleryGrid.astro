---
// Importaciones y definición de propiedades
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

const { mediaFiles } = Astro.props;

// Asegurar que images y videos sean arrays iterables
const images = Array.isArray(mediaFiles.images) ? mediaFiles.images : [];
const videos = Array.isArray(mediaFiles.videos) ? mediaFiles.videos : [];

// Combinar y transformar rutas de imágenes
const unifiedMediaPaths = [...images, ...videos].map((file) => file.replace('../../', '/src/'));

// Importar metadatos de imágenes
const imageSources = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/*.{jpeg,jpg,png,gif}');
---

<!-- Renderizado condicional basado en el tipo de archivo -->
<div id="cards" class="grid grid-cols-5 grid-rows-12 gap-8 h-[150vh]">
  {
    unifiedMediaPaths.map((mediaPath, index) => {
      const isImage =
        mediaPath.endsWith('.jpg') ||
        mediaPath.endsWith('.jpeg') ||
        mediaPath.endsWith('.png') ||
        mediaPath.endsWith('.gif');
      const mediaSrc = isImage ? imageSources[mediaPath]() : mediaPath;

      const spanClass = [
        'col-span-3 row-span-4',
        'col-span-2 row-span-4 col-start-4',
        'col-span-2 row-span-4 row-start-5',
        'col-span-3 row-span-4 col-start-3 row-start-5',
        'col-span-5 row-span-4 row-start-9',
      ][index % 5];

      return (
        <div class={`bento ${spanClass}`}>
          <div class="bento-content h-full w-full rounded-xl overflow-hidden">
            <div class="w-full h-full absolute z-10 bento-text-container flex items-end justify-end">
              <div class="py-6 px-12 text-end">
                <p class="text-gray-400 font-semibold mb-1">3d Modeling and Texturing </p>
                <p class="text-white text-sm ">By: Carlos Bea</p>
              </div>
            </div>
            {isImage ? (
              <Image class="rounded-3xl" alt="Imagen" src={mediaSrc} loading="lazy" decoding="async" />
            ) : (
              <video class="object-cover h-full w-full -z-10" src={mediaSrc} autoplay muted playsinline loop />
            )}
          </div>
        </div>
      );
    })
  }
</div>
