---
import SCard from './SCard.astro';
import SCardButton from './SCardButton.astro';
import { Icon } from 'astro-icon/components';

interface Link {
  text?: string;
  href?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<Link>;
}

export interface Props {
  links?: Array<MenuLink>;
  isHomePage?: boolean;
  back: any;
}

const { links = [], back, isHomePage } = Astro.props;
---

<header
  class="fixed flex justify-center items-end md:items-center z-50 w-full md:max-w-[34rem] md:h-auto translate-y-80 md:translate-y-0 -translate-x-1/2 bottom-0 md:bottom-4 left-1/2"
  id="header"
>
  <div
    id="navContainer"
    style="border-radius: 2rem;"
    class={`border-t md:border border-[#f2f2f21a] w-full h-96 md:h-12 shadow-[0_10px_25px_0_rgba(0,0,0,0.15)] will-change-transform flex items-start md:items-center opacity-0 justify-end flex-row ${
      isHomePage
        ? 'w-full md:w-[87.5%] backdrop-blur-xl border-[#f2f2f21a] bg-[#f2f2f20d]'
        : 'md:w-3/12 bg-[#0000000d] backdrop-blur-md border-[#f2f2f248]'
    } `}
  >
    {isHomePage && <SCard />}
    <div class="flex justify-center w-full h-16 md:h-full" id="navElementsContainer">
      <nav class="w-full items-center justify-evenly flex z-30" aria-label="Main navigation">
        <div
          id="navGlow"
          class={`${
            isHomePage ? 'w-1/4 h-16 md:h-full -z-20 absolute left-0 navGlow will-change-transform' : 'hidden'
          }`}
        >
        </div>
        {
          !isHomePage ? (
            <a href={back.href} class="flex items-center hover:text-white cursor-none" data-nav="animate">
              <div class="magnetic flex justify-center items-center" data-strength=".75">
                <Icon name="arrow-narrow-right" class="block text-xl mr-1 rotate-180" />
                {back.text}
              </div>
            </a>
          ) : (
            links.map(({ text, href, icon }) => (
              <a
                class="navElements font-medium cursor-none text-sm md:text-base text-slate-300 hover:text-white ease-in-out duration-300 md:py-3 flex flex-col md:flex-row items-center"
                data-strength=".75"
                href={href}
              >
                <div class="magnetic flex flex-col justify-center items-center" data-strength=".75">
                  <Icon name={icon} class="block md:hidden text-xl mb-1" />
                  {text}
                </div>
              </a>
            ))
          )
        }
      </nav>

      {isHomePage && <SCardButton isHomePage={isHomePage} />}
    </div>
  </div>
</header>

<script>
  import { gsap } from 'gsap';

  const sbutton = document.getElementById('sbutton');
  const navContainer = document.getElementById('navContainer');
  const navElementsContainer = document.getElementById('navElementsContainer');
  const navElements = Array.from(document.getElementsByClassName('navElements'));
  const navGlow = document.getElementById('navGlow');
  const scard = document.getElementById('scard');
  const header = document.getElementById('header');
  const scardClose = document.getElementById('scardClose');
  const enlaces = document.querySelectorAll('[data-nav="animate"]');
  const main = document.querySelector('main');

  let isActive = false;
  function isMobileDevice() {
    const userAgent = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    if (userAgent && window.innerWidth < 768) {
      return true;
    }
  }
  if (isMobileDevice() && navContainer) {
    navContainer.style.borderRadius = '0';
  }
  if (navContainer && navGlow) {
    window.addEventListener('DOMContentLoaded', () => {
      let delay = 1.25;
      let duration = 1.5;
      if (window.scrollY > 800) {
        delay = 0;
        duration = 0;
      }
      if (navElements.length) {
        gsap.from(navContainer, {
          duration: duration,
          delay: delay,
          y: 100,
          ease: 'Expo.easeOut',
        });
        gsap.to(navContainer, { opacity: 1 });
      }
      if (!navElements.length) {
        gsap.from(navContainer, {
          duration: 1.5,
          delay: 0.15,
          y: 100,
          ease: 'Expo.easeOut',
        });
        gsap.to(navContainer, { opacity: 1 });
      }
      enlaces.forEach((enlace) => {
        enlace.addEventListener('click', (e) => {
          e.preventDefault();
          const destino = enlace.getAttribute('href');
          if (destino) {
            gsap.to(main, {
              duration: 0.75,
              filter: 'blur(15px)',
              opacity: 0,
              ease: 'power3.out',
              onComplete: () => {
                window.location.href = destino;
              },
            });
            gsap.to(navContainer, {
              duration: 0.5,
              opacity: 0,
              y: 50,
              ease: 'power3.in',
            });
          }
        });
      });
    });

    function isMobileDevice() {
      const userAgent = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
      return userAgent && window.innerWidth < 768;
    }

    const openTimeline = gsap.timeline({
      paused: true,
      onStart: () => {
        isActive = true;
      },
      onReverseComplete: () => {
        isActive = false;
      },
    });

    // Configuración base para todos los dispositivos
    openTimeline
      .to(navElementsContainer, {
        duration: 0.5,
        filter: 'blur(10px)',
        opacity: 0,
        ease: 'Expo.easeOut',
      })
      .to(
        navContainer,
        {
          duration: 1.25,
          height: '195px',
          width: '100%',
          borderRadius: '1rem',
          backdropFilter: 'blur(50px)',
          ease: 'Expo.easeOut',
        },
        '0'
      )
      .to(
        scard,
        {
          duration: 1.25,
          display: 'flex',
          opacity: 1,
          filter: 'blur(0px)',
          ease: 'Expo.easeOut',
        },
        '0'
      )
      .to(
        navGlow,
        {
          duration: 0.5,
          filter: 'blur(10px)',
          opacity: 0,
        },
        '0'
      )
      .to(
        scardClose,
        {
          duration: 1.25,
          opacity: 1,
          scale: 1,
          rotate: 270,
          ease: 'Expo.easeOut',
        },
        '0'
      );

    // Ajustes específicos para dispositivos móviles
    if (isMobileDevice()) {
      openTimeline
        .clear()
        .to(navElementsContainer, {
          duration: 0.5,
          filter: 'blur(5px)',
          opacity: 0,
          ease: 'Expo.easeOut',
        })

        .to(
          navContainer,
          {
            duration: 1,
            y: '-320px',
            width: '100%',
            backdropFilter: 'blur(30px)',
            ease: 'Expo.easeOut',
          },
          '0'
        )
        .to(
          scard,
          {
            duration: 1,
            display: 'block',
            opacity: 1,
            filter: 'blur(0px)',
            ease: 'Expo.easeOut',
          },
          '0'
        )
        .to(
          navGlow,
          {
            duration: 0.5,
            filter: 'blur(10px)',
            opacity: 0,
          },
          '0'
        )
        .to(
          scardClose,
          {
            duration: 1,
            opacity: 1,
            scale: 1,
            rotate: 270,
            ease: 'Expo.easeOut',
          },
          '0'
        );
    }

    // Eventos de clic para abrir y cerrar
    sbutton?.addEventListener('click', () => {
      if (!isActive) {
        openTimeline.play();
      }
    });

    scardClose?.addEventListener('click', () => {
      if (isActive) {
        openTimeline.tweenTo(0, {
          delay: 0,
          duration: 0.75,
          ease: 'Expo.easeOut',
          onComplete: () => {
            gsap.to(scard, { clearProps: 'display' });
          },
        });
      }
    });
  }
</script>
