---
import SCardButton from './SCardButton.astro';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends Link {
  type?: string;
}

interface MenuLink extends Link {
  links?: Array<Link>;
}

export interface Props {
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const { links = [] } = Astro.props;
---

<header class="fixed z-50 w-full max-w-[34rem] flex justify-center -translate-x-1/2 bottom-4 left-1/2" id="header">
  <div
    id="navContainer"
    class="flex items-center justify-end flex-row h-12 w-[87.5%] border backdrop-blur-xl border-[#f2f2f21a] rounded-full bg-[#f2f2f20d] shadow-[0_10px_25px_0_rgba(0,0,0,0.15)]"
  >
    <div id="scard" class="fixed h-full z-40 flex left-0 right-0 bottom-0 opacity-0">
      <div class="flex w-full items-center justify-start flex-row" id="now-playing">
        <a id="track-link" class="flex m-0 w-[30%] flex-col" href="#" target="_blank">
          <img id="album-cover" class="m-0 h-40 rounded-l-xl object-cover" src="" alt="Car치tula del 치lbum" />
          <img
            id="default-image"
            class="rounded-l-xl h-32 object-cover"
            src="no-song.png"
            alt="Car치tula del 치lbum por defecto"
            style="display: none;"
          />
        </a>
        <div class="flex-col mx-5 w-[70%]">
          <h2 id="scard-title" class="truncate max-w-xs text-white text-lg font-semibold">Sonando en mi Spotify游뱆</h2>
          <h3 id="track-name" class="truncate max-w-xs text-neutral-300 text-base font-semibold mb-4"></h3>

          <div id="custom-audio" class="flex flex-row items-center justify-start mt-3">
            <button id="play-pause-button" class="w-9 h-9 bg-[#ffffff25] rounded-full flex items-center justify-center">
              <svg viewBox="0 0 24 24" id="play-icon" width="24" height="24" stroke="#fff" fill="#fff"
                ><path
                  d="M18 12c0 0.4-0.4 0.6-0.4 0.6l-10.2 6.4c-0.7 0.5-1.4 0.1-1.4-0.8v-12.4c0-0.9 0.6-1.3 1.4-0.8l10.2 6.4c0 0 0.4 0.3 0.4 0.6z"
                ></path></svg
              >
              <svg
                id="pause-icon"
                style="display: none;"
                viewBox="0 0 24 24"
                width="24"
                height="24"
                stroke="#fff"
                fill="#fff"
                ><path
                  d="M9 4.5h-1.5a1.5 1.5 0 0 0-1.5 1.5v12a1.5 1.5 0 0 0 1.5 1.5h1.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5z m7.5 0h-1.5a1.5 1.5 0 0 0-1.5 1.5v12a1.5 1.5 0 0 0 1.5 1.5h1.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5z"
                ></path></svg
              >
            </button>

            <div id="progress-bar">
              <div id="progress"></div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <nav class="w-full items-center justify-evenly hidden md:flex md:h-auto z-50" aria-label="Main navigation">
      <div id="navGlow" class="w-1/4 h-full -z-20 absolute -translate-x-1/2 navGlow"></div>
      {
        links.map(({ text, href }) => (
          <a
            class="navElements font-medium hover:text-gray-900 cursor-none dark:hover:text-white  py-3 flex items-center transition duration-150 ease-in-out"
            href={href}
          >
            {text}
          </a>
        ))
      }
    </nav>
    <SCardButton />
  </div>
</header>
<script>
  import { gsap } from 'gsap';

  const sbutton = document.getElementById('sbutton');
  const navContainer = document.getElementById('navContainer');
  const navElements = Array.from(document.getElementsByClassName('navElements'));
  const navGlow = document.getElementById('navGlow');
  const scard = document.getElementById('scard');

  let isActive = false;

  if (sbutton && navContainer && navElements.length && scard) {
    sbutton.addEventListener('click', () => {
      if (!isActive) {
        gsap.to(navContainer, {
          duration: 1,
          height: '200px',
          width: '100%',
          backdropFilter: 'blur(250px)',
          ease: 'Expo.easeOut',
        });
        gsap.to(scard, {
          duration: 0.5,
          delay: 0.4,
          opacity: 1,
          ease: 'Expo.easeOut',
        });
        gsap.to(navContainer, {
          duration: 0.1,
          borderRadius: '1rem',
        });
        gsap.to(navGlow, {
          duration: 0.01,
          filter: 'blur(10px)',
          opacity: 0,
        });

        navElements.forEach((element) => {
          gsap.to(element, {
            duration: 0.01,
            filter: 'blur(10px)',
            opacity: 0,
          });
        });

        isActive = true;
      } else {
        gsap.to(navContainer, {
          clearProps: 'all',
        });

        gsap.to(scard, {
          duration: 0.75,
          autoAlpha: 0,
          y: 100,
          ease: 'Expo.easeOut',
        });

        navElements.forEach((element) => {
          // Regresar navElements a su estado original
          gsap.to(element, {
            clearProps: 'filter',
          });
        });

        isActive = false;
      }
    });
  }
</script>
