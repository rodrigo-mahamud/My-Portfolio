---
export interface Props {
  title: string;
  description: string;
  delay: string;
  hello: string;
}
---

<div
  class="card animate-on-scroll relative flex flex-col border border-transparent"
  data-type="simple"
  data-delay={Astro.props.delay}
  data-duration="2.5"
  data-easing="Expo.easeOut"
>
  <div class="card-content relative">
    <div class="card-image">
      <slot />
    </div>
    <div class="px-8 pb-6">
      <h3 class="text-xl font-bold">{Astro.props.title}</h3>
      {
        Astro.props.description && (
          <h4 class="text-muted text-gray-400 text-md mt-1" set:html={Astro.props.description} />
        )
      }
    </div>
  </div>
</div>

<script>
  interface ExtendedHTMLElement extends HTMLElement {
    style: CSSStyleDeclaration & {
      '--mouse-x': string;
      '--mouse-y': string;
    };
  }

  document.getElementById('cards')!.onmousemove = (e: MouseEvent) => {
    const cards = document.getElementsByClassName('card');

    for (const card of Array.from(cards) as ExtendedHTMLElement[]) {
      const rect = card.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;

      card.style.setProperty('--mouse-x', `${x}px`);
      card.style.setProperty('--mouse-y', `${y}px`);
    }
  };
</script>
