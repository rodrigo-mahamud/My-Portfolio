---
---

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  gsap.registerPlugin(ScrollTrigger);

  /*---------------------*/
  /*----MICE SCRIPTS---- */
  /*---------------------*/

  document.addEventListener('DOMContentLoaded', function () {
    // Selecciona el elemento que representa la esfera y el filtro de desenfoque
    const esfera = document.getElementById('esfera');
    const welcome = document.getElementById('welcome');
    const motionBlurFilter = document.querySelector('#motionBlur feGaussianBlur');

    // Verifica si la esfera y el filtro de desenfoque existen en el DOM
    if (!esfera || !motionBlurFilter) {
      console.error('No se pudo encontrar la esfera o el filtro de desenfoque en el DOM.');
      return;
    }

    // Variables para almacenar las posiciones anteriores y actuales del ratón
    let mouseX = 0;
    let mouseY = 0;
    let prevMouseX = 0;
    let prevMouseY = 0;

    // Temporizador para detectar si el ratón se ha detenido
    let timer;

    // Crea una función para manejar el movimiento del ratón
    function moverEsfera(e) {
      // Limpia el temporizador existente
      clearTimeout(timer);

      // Actualiza las posiciones del ratón
      prevMouseX = mouseX;
      prevMouseY = mouseY;
      mouseX = e.clientX;
      mouseY = e.clientY;

      // Calcula la velocidad del movimiento del ratón
      const velocityX = mouseX - prevMouseX;
      const velocityY = mouseY - prevMouseY;
      const velocity = Math.sqrt(velocityX * velocityX + velocityY * velocityY);

      // Verifica si la esfera no es null antes de llamar a getBoundingClientRect
      const esferaRect = esfera && esfera.getBoundingClientRect();

      // Usa GSAP para actualizar la posición de la esfera con un delay
      if (esferaRect) {
        gsap.to(esfera, {
          x: mouseX - esferaRect.width / 2, // Ajusta la posición en X
          y: mouseY - esferaRect.height / 2, // Ajusta la posición en Y
          duration: 0.2,
          ease: 'expo.out',
        });
      }

      // Ajusta el efecto de desenfoque de movimiento según la velocidad del ratón
      const blurAmount = Math.min(velocity * 0.1, 5); // Aumenta el desenfoque y establece un límite máximo
      gsap.to(motionBlurFilter, {
        attr: {
          stdDeviation: `${blurAmount} ${blurAmount}`,
        },
        duration: 0.3,
        ease: 'expo.out',
      });

      // Detecta si el ratón se ha detenido y elimina el desenfoque
      timer = setTimeout(() => {
        gsap.to(motionBlurFilter, {
          attr: {
            stdDeviation: '0 0',
          },
          duration: 0.85,
          ease: 'expo.out',
        });
      }, 50);
    }
    window.addEventListener('load', function () {
      setTimeout(function () {
        console.log('El temporizador ha finalizado');
        gsap.to(welcome, {
          opacity: 0,
          duration: 0.2,
          ease: 'expo.out',
        });
        gsap.to(esfera, {
          scale: 0.5,
          duration: 2,
          border: 2,
          background: 'transparent',
          ease: 'expo.out',
        });
      }, 2000); // El tiempo de espera en milisegundos, por ejemplo, 2000 ms (2 segundos)
    });

    // Aplica el filtro de desenfoque de movimiento a la esfera
    esfera.style.filter = 'url(#motionBlur)';

    // Agrega un evento 'mousemove' al documento para seguir la posición del ratón
    document.addEventListener('mousemove', moverEsfera);
  });

  /*-----------------------*/
  /*----LOADING SCREEN---- */
  /*-----------------------*/
  function animateLoadingText() {
    const loadingTextContainer = document.getElementById('loading-text-container');

    if (loadingTextContainer) {
      // Coloca el contenedor en el centro
      loadingTextContainer.style.transform = 'translateY(0%)';

      // Animación de abajo hacia arriba para ocultar el texto
      gsap.to(loadingTextContainer, {
        y: '-100%',
        duration: 0.8,
        delay: 0.25,
        ease: 'expo.inOut',
        onComplete: () => {
          loadingTextContainer.remove();
        },
      });
    }
  }
  document.addEventListener('DOMContentLoaded', animateLoadingText);
</script>
