---
---

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  import Scrollbar from 'smooth-scrollbar';

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener('DOMContentLoaded', () => {
    const esfera = document.getElementById('esfera');
    const portal = document.getElementById('portal');

    if (!esfera) {
      console.error('No se pudo encontrar la esfera o el filtro de desenfoque en el DOM.');
      return;
    }

    // Primero, realizar la animación inicial después de 750ms
    gsap.to(esfera, {
      duration: 0.25,
      opacity: 1,
    });
    gsap.to(esfera, {
      scale: 0.5,
      duration: 0.75,
      delay: 0.75,
      opacity: 1,
      border: '2px solid #fff',
      background: 'transparent',
      ease: 'Expo.easeOut',
    });

    document.addEventListener('mousemove', moverEsfera);
    function moverEsfera(e) {
      const esferaRect = esfera && esfera.getBoundingClientRect();

      if (esferaRect) {
        gsap.to(esfera, {
          x: e.clientX,
          y: e.clientY,
          duration: 0.45,
          delay: 0.01,
          ease: 'Expo.easeOut',
        });
      }
    }
    //HOVER
    const elementsToHover = document.querySelectorAll('a, button');

    elementsToHover.forEach((el) => {
      el.addEventListener('mouseenter', onElementHover);
      el.addEventListener('mouseleave', onElementMouseLeave);
    });

    function onElementHover(e) {
      if (!e.target.classList.contains('NoMiceHover')) {
        gsap.to(esfera, {
          scale: 0.75,
          background: '#ffffff50',
          border: '0px',
          duration: 0.5,
          ease: 'Expo.easeOut',
        });
      }
    }

    function onElementMouseLeave(e) {
      if (!e.target.classList.contains('NoMiceHover')) {
        gsap.to(esfera, {
          scale: 0.5,
          background: 'transparent',
          border: '2px solid #fff',
          duration: 0.5,
          ease: 'Expo.easeOut',
        });
      }
    }

    // THE 404 PAGE IS A LIE
    if (portal) {
      const stickman = document.getElementById('stickman');
      portal.addEventListener('mouseenter', () => {
        gsap.fromTo(
          esfera,
          {
            scale: 0.5,
            rotate: '36deg',
          },
          {
            border: '4px solid #ff9142',
            boxShadow: '0px 0px 75px 0px #de5f03, inset 0px 0px 35px 1px #ff6e00',
            skewY: '30deg',
            scale: 0.9,
            duration: 0.3,
            ease: 'Expo.easeOut',
          }
        );
        gsap.set(stickman, {
          display: 'flex',
        });
      });
      portal.addEventListener('mouseout', () => {
        gsap.to(esfera, {
          skewY: '0deg',
          scale: 0.5,
          duration: 0.3,
          border: '2px solid #fff',
          boxShadow: 'unset',
          background: 'transparent',
          ease: 'Expo.easeOut',
        });
        gsap.set(stickman, {
          display: 'none',
        });
      });
    }
    // Agrega un evento 'mousemove' al documento para seguir la posición del ratón
  });

  /*-----------------------*/
  /*----LOADING SCREEN---- */
  /*-----------------------*/
  function animateLoadingText() {
    const loadingTextContainer = document.getElementById('loading-text-container');

    if (loadingTextContainer) {
      // Coloca el contenedor en el centro
      loadingTextContainer.style.transform = 'translateY(0%)';

      // Animación de abajo hacia arriba para ocultar el texto
      gsap.to(loadingTextContainer, {
        y: '-100%',
        duration: 0.75,
        delay: 0.25,
        ease: 'expo.inOut',
        onComplete: () => {
          loadingTextContainer.remove();
        },
      });
    }
  }
  document.addEventListener('DOMContentLoaded', animateLoadingText);

  function scrollToSection(event) {
    event.preventDefault();
    const targetId = event.target.getAttribute('href');
    const targetElement = document.querySelector(targetId);

    if (targetElement) {
      const targetOffsetTop = targetElement.offsetTop;
      scrollbarInstance.scrollTo(0, targetOffsetTop, 1000);
    }
  }

  function fadeOutScrollbar() {
    const scrollbarTrack = document.querySelector('.scrollbar-track-y');
    if (scrollbarTrack && scrollbarTrack instanceof HTMLElement) {
      scrollbarTrack.classList.remove('show');
    }
  }

  function fadeInScrollbar() {
    const scrollbarTrack = document.querySelector('.scrollbar-track-y');
    if (scrollbarTrack && scrollbarTrack instanceof HTMLElement) {
      scrollbarTrack.classList.add('show');
    }
  }

  function resetScrollbarTimeout() {
    clearTimeout(scrollbarTimeout);
    fadeInScrollbar();
    scrollbarTimeout = setTimeout(fadeOutScrollbar, 2000);
  }

  const container = document.getElementById('scrollable-content');
  let scrollbarInstance;

  if (container !== null) {
    const options = {
      damping: 0.04,
      renderByPixel: true,
      continuousScrolling: true,
      alwaysShowTracks: false,
    };

    scrollbarInstance = Scrollbar.init(container, options);

    const navLinks = document.querySelectorAll('nav a');

    navLinks.forEach((link) => {
      link.addEventListener('click', scrollToSection);
    });
  } else {
    console.error('No se encontro contenedor scroleable');
  }

  let scrollbarTimeout;

  if (container) {
    container.addEventListener('mouseenter', fadeInScrollbar);
    container.addEventListener('mouseleave', fadeOutScrollbar);
    container.addEventListener('wheel', resetScrollbarTimeout);
  }

  resetScrollbarTimeout();

  const navGlow = document.querySelector('#navGlow');
  const navLinks = document.querySelectorAll('#header nav a');

  if (!container) {
    console.error('No se pudo encontrar el elemento con el ID "scrollable-content"');
  }

  function updateNavGlow() {
    const scrollPercent =
      scrollbarInstance.offset.y / (scrollbarInstance.limit.y - scrollbarInstance.size.container.height);
    let navGlowPosition;
    let isInPosition;

    if (scrollPercent <= 0.2) {
      isInPosition = 0;
      navGlowPosition = 1;
    } else if (scrollPercent <= 0.5) {
      isInPosition = 1;
      navGlowPosition = 20;
    } else if (scrollPercent <= 0.8) {
      isInPosition = 2;
      navGlowPosition = 46;
    } else {
      isInPosition = 3;
      navGlowPosition = 72;
    }

    gsap.to(navGlow, {
      left: `${navGlowPosition}%`,
      duration: 0.5,
      overwrite: true,
      ease: 'Expo.easeOut',
    });
    navLinks.forEach((link, index) => {
      if (index === isInPosition) {
        gsap.to(link, {
          color: '#fff',
          scale: 1.05,
          delay: 0.005,
          duration: 0.1,
          overwrite: true,
          ease: 'Expo.easeOut',
        });
      } else {
        gsap.to(link, {
          clearProps: 'all',
          duration: 0.1,
          ease: 'expo.in',
        });
      }
    });
  }
  const sbutton = document.getElementById('sbutton');
  const scard = document.getElementById('scard');
  let isActive = false;
  if (sbutton) {
    sbutton.addEventListener('click', () => {
      if (!isActive) {
        gsap.to(scard, {
          duration: 1,
          autoAlpha: 1,
          y: 0,
          ease: 'Expo.easeOut',
        });
        isActive = true;
      } else {
        gsap.to(scard, {
          duration: 0.75,
          autoAlpha: 0,
          y: 100,
          ease: 'Expo.easeOut',
        });
        isActive = false;
      }
    });
  }
  scrollbarInstance.addListener(updateNavGlow);

  ScrollTrigger.scrollerProxy('#scrollable-content', {
    scrollTop(value) {
      if (arguments.length) {
        scrollbarInstance.scrollTop = value;
      }
      return scrollbarInstance.scrollTop;
    },
  });

  scrollbarInstance.addListener(ScrollTrigger.update);

  function animateOnScroll() {
    const elementsToAnimate = document.querySelectorAll('.SAnimate');

    elementsToAnimate.forEach((element) => {
      const htmlElement = element as HTMLElement;
      const delay = htmlElement.dataset.sadelay ?? 0;

      gsap.from(element, {
        duration: 2.25,
        autoAlpha: 0,
        y: 100,
        delay: delay,
        ease: 'Expo.easeOut',
        clearProps: 'all',
        scrollTrigger: {
          trigger: element,
          scroller: '#scrollable-content',
          start: 'top bottom',
          markers: false,
        },
      });
    });
  }

  animateOnScroll();

  window.addEventListener('DOMContentLoaded', () => {
    const heroElementsToAnimate = document.querySelectorAll('.SAnimateHero');

    heroElementsToAnimate.forEach((element, index) => {
      const delay = 0.65 + index * 0.15;
      gsap.from(element, {
        duration: 2.25,
        autoAlpha: 0,
        y: 100,
        delay: delay,
        ease: 'Expo.easeOut',
        clearProps: 'all',
      });
    });
  });

  const sections = Array.from(document.querySelectorAll('.sticky-section'));

  scrollbarInstance.addListener(({ offset }) => {
    sections.forEach((section) => {
      const minScrollY = parseInt((section as HTMLElement).dataset.start || '0', 10);
      const maxScrollY = parseInt((section as HTMLElement).dataset.end || '0', 10);

      // Sólo queremos hacer que la sección sea "fija" si el desplazamiento está dentro de nuestro rango definido.
      if (offset.y >= minScrollY && offset.y <= maxScrollY) {
        // Calcular la cantidad de desplazamiento dentro de nuestro rango definido.
        const scrollY = offset.y - minScrollY;

        gsap.to(section, {
          y: scrollY,
          duration: 0.001,
        });
      } else if (offset.y > maxScrollY) {
        gsap.to(section, {
          y: maxScrollY - minScrollY,
          duration: 0.001,
        });
      } else {
        gsap.to(section, {
          y: -2,
          duration: 0.001,
        });
      }
    });
  });
</script>
